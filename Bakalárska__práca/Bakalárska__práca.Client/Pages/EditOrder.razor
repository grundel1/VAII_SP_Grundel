@page "/edit-order"
@page "/edit-order/{id:int}"
@using Bakalárska__práca.Shared.Model
@using Bakalárska__práca.Shared.Services
@inject NavigationManager NavigationManager
@inject IOrderService OrderService
@rendermode InteractiveAuto

@if(Id == null)
{
    <h3>Vytvor objednávku</h3>
}
else
{
    <h3>Uprav @order.Name</h3>
}

<EditForm Model="order" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator/>
    <div>
        <label>Názov</label>
        <InputText @bind-Value="order.Name" />
        <ValidationMessage For="@(() => order.Name)" />
    </div>

    <button type="submit" class="btn btn-primary">Potvrdiť</button>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }
    Order order { get; set; } = new Order { Name = string.Empty };

    protected override async Task OnParametersSetAsync()
    {
        if (Id.HasValue)
        {
            order = await OrderService.GetOrderById(Id.Value);
        }
        else
        {
            order = new Order { Name = string.Empty };
        }
    }

    async Task HandleSubmit()
    {
        if (Id == null)
        {
            await OrderService.AddOrder(order);
            NavigationManager.NavigateTo("/orderList");
        }
        else
        {
            await OrderService.EditOrder((int)Id, order);
            NavigationManager.NavigateTo("/orderList");
        }
    }

    
}


@* <EditForm Model="order" OnValidSubmit="HandleSubmit">
    <label>Name</label>
    <InputText @bind-Value="order.Name">@order.Name</InputText>
    <button type="submit" class="btn btn-primary">Submit</button>
    <ValidationMessage For="@(() => order.Name)" />
    @if(Id != null)
    {
        <button @onclick="DeleteOrder" type="button" class="btn btn-danger">Delete</button>
    }
</EditForm>

@code {
    [Parameter] public int? Id { get; set; }
    Order order { get; set; } = new Order { Name = string.Empty };


    protected override async Task OnParametersSetAsync()
    {
        if (Id.HasValue)
        {
            order = await OrderService.GetOrderById(Id.Value);
        }
        else
        {
            order = new Order { Name = string.Empty };
        }
    }

    async Task HandleSubmit()
    {
        if (order.Name == string.Empty)
        {
            return;
        }

        if (Id == null)
        {
            await OrderService.AddOrder(order);
        }
        else
        {
            await OrderService.EditOrder((int)Id, order);
        }
    }

    async Task DeleteOrder()
    {
        await OrderService.DeleteOrder((int)Id);
    }

} *@

